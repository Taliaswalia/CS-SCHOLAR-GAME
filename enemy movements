import pygame

# Initialize Pygame
pygame.init()

# Constants
bg_speed = 0
player_speed = 100
enemy_speed = 80

# Sample initial values (replace these with actual game logic)
enemy_animation = True
enemycount = 0
enemyX, enemyY = 200, 200
enemy_vel = 1
playerX, playerY = 150, 300
backgroundX = 0
left = False
right = False
dt = 0.1  # Delta time, adjust as needed

# Sample sprite lists (replace with actual sprite surfaces)
win = pygame.display.set_mode((1500, 800))  # Sample window size
enemy = [pygame.Surface((50, 50)) for _ in range(10)]
walkLeft = [pygame.Surface((50, 50)) for _ in range(10)]
walkRight = [pygame.Surface((50, 50)) for _ in range(10)]

# Main game loop (simplified)
running = True
while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        win.blit(enemy[enemycount // 3], (enemyX, enemyY))
        enemycount = (enemycount + 1) % (len(enemy) * 3)

    # Enemy
    if enemy_animation:
        win.blit(enemy[enemycount // 3], (enemyX, enemyY))
        enemycount = (enemycount + 1) % (len(enemy) * 3)
        if enemy_vel > 0:
            if enemyX >= 1300:
                enemy_vel = -1
            else:
                if left and playerX <= 100:
                    enemyX += (enemy_speed + player_speed) * dt
                elif left and playerX > 100:
                    enemyX += (enemy_speed + (player_speed / 5)) * dt
                elif right and playerX >= 1350:
                    enemyX += (enemy_speed - player_speed) * dt
                elif right and playerX < 1350:
                    enemyX += (enemy_speed - (player_speed / 5)) * dt
                else:
                    enemyX += enemy_speed * dt
        elif enemy_vel < 0:
            if enemyX <= 150:
                enemy_vel = 1
            else:
                if left and playerX <= 100:
                    enemyX -= (enemy_speed - player_speed) * dt
                elif left and playerX > 100:
                    enemyX -= (enemy_speed - (player_speed / 5)) * dt
                elif right and playerX >= 1350:
                    enemyX -= (enemy_speed + player_speed) * dt
                elif right and playerX < 1350:
                    enemyX -= (enemy_speed + (player_speed / 5)) * dt
                else:
                    enemyX -= enemy_speed * dt

    # Player
    if left:
        win.blit(walkLeft[walkcount // 1], (playerX - 20, playerY))

        if playerX > 100:
            playerX -= (player_speed + (player_speed / 5)) * dt  # vitesse du joueur = 1/3
            backgroundX += (player_speed / 5) * dt  # vitesse du fond d'Ã©cran = 2/3
            if playerX == 100:
                playerX -= 0
                backgroundX += player_speed * dt
        else:
            backgroundX += player_speed * dt

    elif right:
        win.blit(walkRight[walkcount // 1], (playerX - 50, playerY))

        if playerX < 1350:
            playerX += (player_speed + (player_speed / 5)) * dt
            backgroundX -= (player_speed / 5) * dt
            if playerX == 1350:
                playerX += 0
                backgroundX -= player_speed * dt
        else:
            backgroundX -= player_speed * dt

    # Update the display
    pygame.display.update()

# Quit Pygame
pygame.quit()
